# Ce fichier est une version détaillé et plus terre à terre du fichier docker-compose.yml
# Vous pouvez vous inspirer pour comprendre le fichier docker-compose


version: '3'

name: airflow_docker
services:
  airflow-init:
    build: # construit l'image à partir du dockerfile
      context: C:\Users\Grit\Desktop\Dev\airflow_docker
      dockerfile: Dockerfile
    command:
      - version
    depends_on:
      postgres:
        condition: service_healthy
        required: true
    environment:
      _AIRFLOW_DB_UPGRADE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_PASSWORD: airflow
      _AIRFLOW_WWW_USER_USERNAME: airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: "10"
    image: extending_airflow:latest
    networks:
      default: null
    user: 50000:50000
    volumes:
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\dags
        target: /opt/airflow/dags
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\logs
        target: /opt/airflow/logs
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\plugins
        target: /opt/airflow/plugins
        bind:
          create_host_path: true

  airflow-scheduler:
    build:
      context: C:\Users\Grit\Desktop\Dev\airflow_docker
      dockerfile: Dockerfile
    command:
      - scheduler
    depends_on:
      postgres:
        condition: service_healthy
        required: true
    environment:
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: "10"
    image: extending_airflow:latest
    networks:
      default: null
    restart: always
    user: 50000:50000
    volumes:
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\dags
        target: /opt/airflow/dags
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\logs
        target: /opt/airflow/logs
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\plugins
        target: /opt/airflow/plugins
        bind:
          create_host_path: true

  airflow-webserver:
    build:
      context: C:\Users\Grit\Desktop\Dev\airflow_docker
      dockerfile: Dockerfile
    command:
      - webserver
    depends_on:
      postgres:
        condition: service_healthy
        required: true
    environment:
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: "10"
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - http://localhost:8080/health
      timeout: 10s
      interval: 10s
      retries: 5
    image: extending_airflow:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
    restart: always
    user: 50000:50000
    volumes:
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\dags
        target: /opt/airflow/dags
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\logs
        target: /opt/airflow/logs
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Grit\Desktop\Dev\airflow_docker\plugins
        target: /opt/airflow/plugins
        bind:
          create_host_path: true

  postgres:
    environment:
      POSTGRES_DB: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_USER: airflow
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -U
        - airflow
      interval: 5s
      retries: 5
    image: postgres:16
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres-db-volume
        target: /var/lib/postgresql/data
        volume: {}
        
networks:
  default:
    name: airflow_docker_default
volumes:
  postgres-db-volume:
    name: airflow_docker_postgres-db-volume
x-airflow-common:
  build: .
  depends_on:
    postgres:
      condition: service_healthy
  environment:
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 10
  image: extending_airflow:latest
  user: 50000:50000
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins